{"version":3,"sources":["../../src/components/main_nav.js"],"names":[],"mappings":";;;;;;;;;;;AACA,IAAM,KAAK,GAAM,OAAO,CAAC,OAAO,CAAC;IAC3B,QAAQ,GAAG,OAAO,CAAC,WAAW,CAAC;IAC/B,CAAC,GAAU,OAAO,CAAC,QAAQ,CAAC;;;AAAC,AAGnC,IAAM,cAAc,GAAG,OAAO,CAAC,wBAAwB,CAAC;;;;AAAC,AAIzD,IAAI,MAAM,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC;IACpC,OAAO,GAA2C,MAAM,CAAC,OAAO;IAAvD,SAAS,GAAgD,MAAM,CAAC,UAAU;IAA/D,UAAU,GAAuD,MAAM,CAAC,WAAW;IAAvE,YAAY,GAA6D,MAAM,CAAC,aAAa;;;;AAGpI,IAAM,eAAe,GAAG,OAAO,CAAC,6BAA6B,CAAC;IACxD,aAAa,GAAK,OAAO,CAAC,0BAA0B,CAAC;;;AAAC,AAG5D,IAAM,OAAO,GAAG,OAAO,CAAC,eAAe,CAAC;IAClC,MAAM,GAAI,OAAO,CAAC,cAAc,CAAC,CAAC;;IAGlC,OAAO;YAAP,OAAO;;AACX,WADI,OAAO,CACC,KAAK,EAAE;0BADf,OAAO;;uEAAP,OAAO,aAEH,KAAK;;AACX,mBAAe,CAAC,aAAa,CAAC,MAAK,KAAK,CAAC,QAAQ,CAAC;;AAAA,AAElD,UAAK,KAAK,GAAG;AACX,YAAM,EAAC,QAAQ;KAChB,CAAC;;GACH;;;AAAA;eARG,OAAO;;wCAWQ;AACjB,UAAI,CAAC,MAAM,GAAG,IAAI,cAAc,EAAE,CAAC;AACnC,UAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;AACtC,UAAI,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;;AAEjE,UAAI,CAAC,QAAQ,CAAC,EAAC,MAAM,EAAC,IAAI,CAAC,MAAM,EAAC,CAAC,CAAA;AACnC,mBAAa,CAAC,iBAAiB,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;AACvE,qBAAe,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;KAChD;;;2CAEsB;AACrB,UAAI,CAAC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACpC,mBAAa,CAAC,oBAAoB,CAAC,SAAS,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;AACjE,mBAAa,CAAC,oBAAoB,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;KAChE;;;;;;oCAGe,MAAM,EAAE,IAAI,EAAC;AAC3B,aAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,MAAM,CAAC,CAAA;AACjD,UAAG,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,MAAM,EAAC;AAC9B,YAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,YAAI,CAAC,QAAQ,CAAC,EAAC,MAAM,EAAC,IAAI,CAAC,MAAM,EAAC,CAAC,CAAA;OACpC;;AAED,UAAI,CAAC,IAAI,GAAK,IAAI,CAAC;KACpB;;;iCAEW;;AAEV,mBAAa,CAAC,oBAAoB,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AAC/D,OAAC,CAAC,KAAK,CAAC,YAAI;AACV,uBAAe,CAAC,SAAS,EAAE,CAAA;OAC5B,CAAC,CAAC;KACJ;;;6BAEO;AACN,UAAG,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,QAAQ,EAAC;AAChC,eAAQ,oBAAC,MAAM,IAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,AAAC,GAAG,CAAC;OAC/C;;AAED,aAAQ,oBAAC,OAAO,IAAC,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,AAAC,GAAG,CAAC;KAGhD;;;SAtDG,OAAO;GAAS,KAAK,CAAC,SAAS;;AA0DrC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;AAC5C,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;AAC7C,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;;AAE/C,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC","file":"main_nav.js","sourcesContent":["//Libraries\nconst React    = require(\"react\")\n    , ReactDOM = require('react-dom')\n    , _        = require(\"lodash\");\n\n// Morse Libraies\nconst ViewportDetect = require(\"viewport-detection-es6\");\n\n// const checker = require(\"../utils/checker\");\n\nlet mixins = require(\"morse-react-mixins\");\nconst [checker, cssMixins, textMixins, widthsMixins]  = [mixins.checker, mixins.css_mixins, mixins.text_mixins, mixins.widths_mixins];\n\n//Flux\nconst NavItemsActions = require(\"../actions/navitems_actions\")\n    , NavItemsStore   = require(\"../stores/navitems_store\");\n\n//Compenents\nconst Desktop = require(\"./desktop_nav\")\n    , Mobile  = require(\"./mobile_nav\");\n\n\nclass MainNav extends React.Component {\n  constructor(props) {\n    super(props);\n    NavItemsActions.prerenderItem(this.props.navitems)\n    // let root = NavItemsStore._getRoots();\n    this.state = {\n      device:\"mobile\"\n    };\n  }\n\n  //Lifecycle\n  componentDidMount(){\n    this.detect = new ViewportDetect();\n    this.device = this.detect.getDevice();\n    this.id = this.detect.trackSize(this._onDeviceChange.bind(this));\n\n    this.setState({device:this.device})\n    NavItemsStore.addChangeListener(\"api_set\", this._fetchData.bind(this));\n    NavItemsActions.setApi(this.props.navitemsApi);\n  }\n\n  componentWillUnmount() {\n    this.detect.removeCallback(this.id);\n    NavItemsStore.removeChangeListener(\"fetched\", this._getNavItems);\n    NavItemsStore.removeChangeListener(\"api_set\", this._fetchData);\n  }\n\n  // event handlers\n  _onDeviceChange(device, size){\n    console.log(device, this.state.device !== device)\n    if(this.state.device !== device){\n      this.device = device;\n      this.setState({device:this.device})\n    }\n\n    this.size   = size;\n  }\n\n  _fetchData(){\n\n    NavItemsStore.removeChangeListener(\"api_set\", this._fetchData);\n    _.defer(()=>{\n      NavItemsActions.fetchData()\n    });\n  }\n\n  render(){\n    if(this.state.device === \"mobile\"){\n      return (<Mobile device={this.state.device} />)\n    }\n\n    return (<Desktop device={this.state.device} />)\n\n\n  }\n\n}\n\nObject.assign(MainNav.prototype, cssMixins);\nObject.assign(MainNav.prototype, textMixins);\nObject.assign(MainNav.prototype, widthsMixins);\n\nmodule.exports = MainNav;"]}