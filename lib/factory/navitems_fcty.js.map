{"version":3,"sources":["../../src/factory/navitems_fcty.js"],"names":[],"mappings":";;AAAA,IAAM,CAAC,GAAO,OAAO,CAAC,QAAQ,CAAC,CAAC;AAChC,IAAM,WAAW,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC;;AAErD,SAAS,MAAM,CAAC,IAAI,EAAC;AACnB,MAAI,CAAC,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;AAChC,SAAO,IAAI,CAAA;CACZ;;AAED,SAAS,SAAS,CAAC,QAAQ,EAAC;AAC1B,MAAI,KAAK,GAAG,KAAK,CAAC;AAClB,GAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAC,EAAE,EAAG;AACxB,QAAG,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,KAAK,CAAC,EAAC;AACjB,WAAK,GAAG,IAAI,CAAC;AACb,aAAO,KAAK,CAAC;KACf;GACF,CAAC,CAAC;;AAEH,SAAO,KAAK,CAAC;CACd;;AAED,SAAS,WAAW,CAAC,OAAO,EAAC;;AAE3B,MAAG,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE,OAAO,OAAO,CAAC,KAAK,CAAC;AAChD,MAAI,KAAK,GAAG,CAAC,CAAC;AACd,MAAI,KAAK,GAAG,KAAK,CAAC;AAClB,GAAC,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,UAAC,EAAE,EAAG;AAC3B,QAAG,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,KAAK,CAAC,EAAC;AAClB,WAAK,GAAG,CAAC,CAAC;AACV,aAAO,KAAK,CAAC;KACd;GACF,CAAC;;AAAC,AAEH,SAAO,KAAK,CAAA;CACb;;AAED,SAAS,WAAW,CAAC,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAC;AACtC,MAAG,IAAI,EAAE,OAAO,IAAI,CAAC;AACrB,MAAG,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,OAAO,IAAI,CAAC;AACpC,SAAO,CAAC,CAAC,MAAM,CAAC,QAAQ,EAAE,UAAC,IAAI,EAAE,IAAI,EAAG;AACtC,QAAG,IAAI,CAAC,EAAE,KAAK,EAAE,EAAC;AAChB,aAAO,IAAI,CAAC;KACb;AACD,QAAI,GAAG,YAAA,CAAC;AACR,QAAG,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,EAAC;AACpB,SAAG,GAAG,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;KACvC;;AAED,WAAO,AAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAI,GAAG,GAAG,IAAI,CAAA;GACtC,EAAE,IAAI,CAAC,CAAC;CACV;;AAED,SAAS,YAAY,CAAC,IAAI,EAAE,QAAQ,EAAU;MAAR,KAAK,yDAAC,CAAC;;AAC3C,MAAG,CAAC,IAAI,EAAE,OAAO,IAAI,CAAC;AACtB,SAAO,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,UAAC,EAAE,EAAG;AACvB,MAAE,GAAU,MAAM,CAAC,EAAE,CAAC,CAAC;AACvB,MAAE,CAAC,KAAK,GAAI,KAAK,CAAC;AAClB,MAAE,CAAC,MAAM,GAAG,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;AAC9B,QAAG,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,KAAK,CAAC,EAAC;AAClB,QAAE,CAAC,GAAG,GAAG,YAAY,CAAC,EAAE,CAAC,GAAG,EAAE,QAAQ,EAAE,KAAK,GAAC,CAAC,CAAC,CAAC;KAClD;AACD,WAAO,EAAE,CAAC;GACX,CAAC,CAAC;CACJ;;AAED,SAAS,UAAS,CAAC,IAAI,EAAE,EAAE,EAAE,QAAQ,EAAC;AACpC,MAAI,MAAM,GAAG,KAAK,CAAC;AACnB,MAAI,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,UAAC,EAAE,EAAG;AACvB,MAAE,CAAC,MAAM,GAAG,AAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,GAAI,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,GAAI,EAAE,CAAC,EAAE,KAAK,EAAE,AAAC,CAAC;AAChE,QAAG,EAAE,CAAC,MAAM,EAAC;AACX,YAAM,GAAG,IAAI,CAAC;AACd,aAAO,EAAE,CAAC;KACX;;AAED,QAAG,CAAC,CAAC,GAAG,CAAC,EAAE,EAAE,KAAK,CAAC,EAAC;AAClB,UAAI,GAAG,GAAG,UAAS,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,QAAQ,CAAC,CAAC;AAC1C,UAAG,GAAG,CAAC,MAAM,EAAC;AACZ,UAAE,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,CAAA;AACjB,UAAE,CAAC,MAAM,GAAG,MAAM,GAAI,GAAG,CAAC,MAAM,CAAC;OAClC;KACF;;AAED,WAAO,EAAE,CAAC;GACX,CAAC,CAAC;;AAEH,SAAO,EAAC,IAAI,EAAC,IAAI,EAAE,MAAM,EAAC,MAAM,EAAC,CAAA;CAClC;;AAED,MAAM,CAAC,OAAO,GAAG,UAAS,IAAI,EAAC;AAC7B,MAAI,QAAQ,GAAG,WAAW,EAAE,CAAC;AAC7B,MAAI,QAAQ,GAAG,YAAY,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;;AAG5C,UAAQ,GAAG,CAAC,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAC,EAAE,EAAG;AAC/B,MAAE,CAAC,UAAU,GAAG,WAAW,CAAC,EAAE,CAAC,CAAC;AAChC,WAAO,EAAE,CAAC;GACX,CAAC,CAAC;;AAGH,MAAI,GAAG,GAAG;AACN,YAAQ,EAAC,kBAAC,EAAE;aAAG,WAAW,CAAC,QAAQ,EAAE,EAAE,CAAC;KAAA;AACxC,UAAM,EAAC,gBAAC,EAAE,EAAG;AACb,UAAI,IAAI,GAAG,WAAW,CAAC,QAAQ,EAAE,EAAE,CAAC;;AAAC,AAErC,UAAG,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,EAAE,OAAO,IAAI,CAAC,GAAG,CAAC;KAChD;AACC,aAAS,EAAC,mBAAC,EAAE,EAAG;AAChB,cAAQ,GAAG,UAAS,CAAC,QAAQ,EAAE,EAAE,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC;KACnD;AACC,YAAQ,EAAC;aAAI,QAAQ;KAAA;AACrB,aAAS,EAAC,qBAAI;AACd,aAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAC,EAAE;eAAG,EAAE,CAAC,MAAM;OAAA,CAAC,CAAC,UAAU,CAAA;KACpD;AACC,gBAAY,EAAC,sBAAC,EAAE,EAAG;AACnB,UAAI,IAAI,GAAG,WAAW,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;AACrC,UAAG,IAAI,EAAC;AACN,eAAO,AAAC,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,YAAY,CAAC,GAAI,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC;OACnE;;AAED,aAAO,IAAI,CAAC;KACb;GACF,CAAA;;AAED,SAAO,GAAG,CAAC;CAEZ,CAAA","file":"navitems_fcty.js","sourcesContent":["const _     = require(\"lodash\");\nconst CheckActive = require(\"../utils/check_active\");\n\nfunction add_id(item){\n  item.id = _.uniqueId(\"navitem\");\n  return item\n}\n\nfunction checkSubs(navitems){\n  let check = false;\n  _.forEach(navitems, (ni)=>{\n    if(_.has(ni, \"sub\")){\n       check = true;\n       return false;\n    }\n  });\n\n  return check;\n}\n\nfunction checkLevels(navitem){\n\n  if(!_.has(navitem, \"sub\")) return navitem.level;\n  let level = 1;\n  let check = false;\n  _.forEach(navitem.sub, (ni)=>{\n    if(_.has(ni, \"sub\")){\n      level = 2;\n      return false;\n    }\n  });\n  // console.log(navitem.title, level)\n  return level\n}\n\nfunction findNavItem(navitems, id, item){\n  if(item) return item;\n  if(_.isEmpty(navitems)) return null;\n  return _.reduce(navitems, (prev, curr)=>{\n    if(curr.id === id){\n      return curr;\n    }\n    let sub;\n    if(_.has(curr, \"sub\")){\n      sub = findNavItem(curr.sub, id, prev);\n    }\n\n    return (_.isObject(sub)) ? sub : prev\n  }, item);\n}\n\nfunction processItems(data, isActive, level=0){\n  if(!data) return null;\n  return _.map(data, (ni)=>{\n    ni        = add_id(ni);\n    ni.level  = level;\n    ni.active = isActive(ni.path);\n    if(_.has(ni, \"sub\")){\n      ni.sub = processItems(ni.sub, isActive, level+1);\n    }\n    return ni;\n  });\n}\n\nfunction setActive(data, id, isActive){\n  let active = false;\n  data = _.map(data, (ni)=>{\n    ni.active = (_.isNull(id)) ? isActive(ni.path) : (ni.id === id);\n    if(ni.active){\n      active = true;\n      return ni;\n    }\n\n    if(_.has(ni, \"sub\")){\n      let sub = setActive(ni.sub, id, isActive);\n      if(sub.active){\n        ni.sub = sub.data\n        ni.active = active =  sub.active;\n      }\n    }\n\n    return ni;\n  });\n\n  return {data:data, active:active}\n}\n\nmodule.exports = function(data){\n  let isActive = CheckActive();\n  let navitems = processItems(data, isActive);\n\n\n  navitems = _.map(navitems, (ni)=>{\n    ni.fullLevels = checkLevels(ni);\n    return ni;\n  });\n\n\n  let obj = {\n      findItem:(id)=>findNavItem(navitems, id)\n    , getSub:(id)=>{\n      let item = findNavItem(navitems, id);\n      // console.log(\"sub\", item)\n      if(item && _.has(item, \"sub\")) return item.sub;\n    }\n    , setActive:(id)=>{\n      navitems = setActive(navitems, id, isActive).data;\n    }\n    , getRoots:()=>navitems\n    , getLevels:()=>{\n      return _.find(navitems, (ni)=>ni.active).fullLevels\n    }\n    , getLevelType:(id)=>{\n      let item = findNavItem(navitems, id);\n      if(item){\n        return (_.has(item, \"fullLevels\")) ? item.fullLevels : item.level;\n      }\n\n      return null;\n    }\n  }\n\n  return obj;\n\n}"]}