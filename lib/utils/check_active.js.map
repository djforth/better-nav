{"version":3,"sources":["../../src/utils/check_active.js"],"names":[],"mappings":";;AAAA,IAAM,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAE5B,SAAS,QAAQ,CAAC,IAAI,EAAC;;AAErB,MAAI,SAAS,GAAG,iGAAiG,CAAC;;AAElH,SAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;CAC9B;;AAED,SAAS,MAAM,GAAG;;AAEhB,SAAO,kBAAkB,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;CACjD;;AAED,MAAM,CAAC,OAAO,GAAG,YAAU;AACzB,MAAG,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,OAAO,KAAK,CAAC;;AAEvC,MAAI,YAAY,GAAG,MAAM,EAAE,CAAC;;AAE5B,MAAI,WAAW,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC;;AAEzC,SAAO,UAAC,IAAI,EAAG;AACb,QAAI,GAAG,AAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAI,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,GAAG,IAAI,CAAC;AAC5D,WAAO,CAAC,CAAC,QAAQ,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;GACtC,CAAA;CACF,CAAA","file":"check_active.js","sourcesContent":["const _ = require(\"lodash\");\n\nfunction parseURL(path){\n  // Regex taken from is from javascript, the good parts by Douglas Crockford - Best performance (http://jsperf.com/url-parse2)\n  let parse_url = /^(?:([A-Za-z]+):)?(\\/{0,3})([0-9.\\-A-Za-z]+)(?::(\\d+))?(?:\\/([^?#]*))?(?:\\?([^#]*))?(?:#(.*))?$/;\n\n  return path.match(parse_url);\n}\n\nfunction getURL() {\n  //Gets Current Path\n  return decodeURIComponent(window.location.href);\n}\n\nmodule.exports = function(){\n  if(_.isUndefined(window)) return false;\n\n  let current_path = getURL();\n\n  let parsed_path = parseURL(current_path);\n\n  return (path)=>{\n    path = (path.match(/^\\//)) ? path.replace(/^\\//, \"\") : path;\n    return _.includes(parsed_path, path);\n  }\n}"]}